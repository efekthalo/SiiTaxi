@using System.Collections.Specialized
@{
    ViewBag.Title = "Nowy przejazd";
}

<h3>Nowy przejazd</h3>
<hr />
@functions {
    public string GetValue(string name)
    {
        var x = TempData["formData"] as NameValueCollection;
        return x != null ? x[name] : "";
    }
}
<form method="post" action="@Url.Action("New", "Taxi")" data-toggle="validator">
    <div class="col-md-6">
        <div class="form-group has-feedback">
            <label for="ownerName">Właściciel:</label>
            <input type="text" class="form-control" id="ownerName" name="ownerName" value="@GetValue("ownerName")" placeholder="Imię i nazwisko" required>
            <span class="glyphicon form-control-feedback" aria-hidden="true"></span>
            <div class="help-block with-errors"></div>
        </div>
        <div class="form-group has-feedback">
            <input type="email" class="form-control" id="ownerEmail" value="@GetValue("ownerEmail")" name="ownerEmail" pattern=".*pl\.sii\.eu" data-pattern-error="Dopuszczalny tylko E-mail Sii!" placeholder="E-mail" required>
            <span class="glyphicon form-control-feedback" aria-hidden="true"></span>
            <div class="help-block with-errors"></div>
        </div>
        <div class="form-group has-feedback">
            <input type="tel" class="form-control" id="ownerPhone" value="@GetValue("ownerPhone")" name="ownerPhone" pattern="[\+]?\d{8,12}" data-pattern-error="Niepoprawny numer telefonu!" placeholder="Numer telefonu">
            <span class="glyphicon form-control-feedback" aria-hidden="true"></span>
            <div class="help-block with-errors"></div>
        </div>

        <div class="form-group has-feedback">
            <label for="datetimepicker10">Data i godzina przejazdu:</label>
            <div class="input-group date" id="datetimepicker10">
                <input type="text" class="form-control" id="time" name="time" value="@GetValue("time")" required />
                <span class="input-group-addon">
                    <span class="glyphicon glyphicon-calendar">
                    </span>
                </span>
            </div>
        </div>

        <div class="form-group has-feedback">
            <label for="przejazdFrom">Miejsce początkowe:</label>
            <input type="text" class="form-control" id="przejazdFrom" name="przejazdFrom" value="@GetValue("przejazdFrom")" required>
            <span class="glyphicon form-control-feedback" aria-hidden="true"></span>
            <div class="help-block with-errors"></div>
        </div>
        <div class="form-group has-feedback">
            <label for="przejazdTo">Miejsce docelowe:</label>
            <input type="text" class="form-control" id="przejazdTo" name="przejazdTo" value="@GetValue("przejazdTo")" required>
            <span class="glyphicon form-control-feedback" aria-hidden="true"></span>
            <div class="help-block with-errors"></div>
        </div>
    </div>
    <div class="col-md-6">
        <div class="form-group">
            <label for="exampleSelect1">Wybierz approvera:</label>
            <select class="form-control" name="approver" id="exampleSelect1" required>
                <option disabled selected> -- Wybierz Approvera -- </option>
                @foreach (var approver in Model.Approvers)
            {
                if (GetValue("approver") == approver.PeopleId.ToString())
                {
                        <option value="@approver.PeopleId" selected="selected">@approver.Name</option>
                    }
                    else
                    {
                        <option value="@approver.PeopleId">@approver.Name</option>
                    }
                }
            </select>
            <span class="glyphicon form-control-feedback" aria-hidden="true"></span>
            <div class="help-block with-errors"></div>
        </div>

        <div class="form-check form-check-inline">
            <ul class="list-group">
                <li class="list-group-item">
                    Czy potrzebna duża taksówka?
                    <div class="material-switch pull-right">
                        @if (GetValue("IsBigTaxi") == "on")
                        {
                            <input id="IsBigTaxi" name="IsBigTaxi" type="checkbox" checked />
                        }
                        else
                        {
                            <input id="IsBigTaxi" name="IsBigTaxi" type="checkbox" />
                        }

                        <label for="IsBigTaxi" class="label-primary"></label>
                    </div>
                </li>
                <li class="list-group-item">
                    Czy potrzebujesz sam kod?
                    <div class="material-switch pull-right">
                        @if (GetValue("order") == "on")
                        {
                            <input id="order" name="order" type="checkbox" checked />
                        }
                        else
                        {
                            <input id="order" name="order" type="checkbox" />
                        }
                        <label for="order" class="label-primary"></label>
                    </div>
                </li>
            </ul>
        </div>

        <div class="form-group">
            <ul class="list-group">
                <li class="list-group-item">
                    Dodatkowe Osoby
                    <div class="material-switch pull-right">
                        @if (GetValue("adds") == "")
                        {
                            <input id="addPass" name="addPass" type="checkbox" />
                        }
                        else
                        {
                            <input id="addPass" name="addPass" type="checkbox" checked />
                        }
                        <label for="addPass" class="label-primary"></label>
                    </div>
                </li>
            </ul>
        </div>

        <div class="form-group has-feedback" id="dodatkoweOsoby">
            @if (GetValue("adds") != "" && GetValue("adds") != null)
            {
                var allAdds = GetValue("adds");
                var adds = allAdds.Split(',');
                foreach (var add in adds)
                {
                    <div id="dodOsoba" class="form-group add">
                        <div class="input-group dodatkowaOsoba">
                            <input type="email" value="@add" class="form-control" id="adds" name="adds" pattern=".*pl\.sii\.eu" data-pattern-error="Dopuszczalny tylko E-mail Sii!" placeholder="E-mail" required><span class="glyphicon form-control-feedback" aria-hidden="true"></span>
                            <span class="input-group-addon btn btn-danger deleteDiv">Usuń</span>
                        </div><div class="help-block with-errors"></div>
                    </div>
                }
            }
        </div>
        <div class="form-group">
            <div class="form-group">
                @if (GetValue("adds") != "")
                {
                    <span class="btn btn-default" id="osobyButton" onclick="dodajOsobe()"><span class="glyphicon glyphicon glyphicon-plus"></span></span>
                }
                else
                {
                    <span style="display: none;" class="btn btn-default" id="osobyButton" onclick="dodajOsobe()"><span class="glyphicon glyphicon glyphicon-plus"></span></span>

                }
            </div>
            <div class="g-recaptcha" data-sitekey="6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI"></div>
        </div>

        <button type="submit" class="btn btn-default">Zamów</button>
    </div>
</form>

@section scripts {
    <script type="text/javascript">
        $(function () {
            $('#datetimepicker10')
                .datetimepicker({
                    locale: 'pl',
                    defaultDate: new Date('@DateTime.Now.ToString("yyyy-MM-ddTHH:mm:ss")'),
                    viewMode: 'days',
                    format: 'DD/MM/YYYY HH:mm'
                });

            $(".deleteDiv")
                    .on("click",
                        function () {
                            $(this).parent().parent().remove();
                            Taxi.deletePassenger();
                        });
        });

        var smallTaxi = 3;
        var bigTaxi = 6;

        var Taxi = {

            form: $('form'),
            addPassengerButton: $('#osobyButton'),

            additionalPeople: $('input[name="adds"]').length || 0,
            maxPeople: smallTaxi,
            
            buttonDisabled: false,
            bigTaxiChecked: false,
            
            switchToBigTaxi: function(){
                this.bigTaxiChecked = true;
                this.maxPeople = bigTaxi;
                this.updateForm();
            },

            switchToSmallTaxi: function(){
                this.bigTaxiChecked = false;
                this.maxPeople = smallTaxi;
                this.updateForm();
            },

            enablePassengers: function () {
                this.addPassengerButton.show()
                this.maxPeople = this.bigTaxiChecked? bigTaxi : smallTaxi;
                this.updateForm();
            },

            disablePassengers: function () {
                this.addPassengerButton.hide()
                this.maxPeople = 0;
                this.updateForm();
            },

            updateForm: function(){
                this.deleteInputs();
                this.refreshButton();
                this.updateValidation();
            },

            addPassenger: function(){
                if (this.additionalPeople < this.maxPeople){
                    this.additionalPeople++;
                    this.updateForm();
                }
            },


            deletePassenger: function(){
                if(this.additionalPeople > 0){
                    this.additionalPeople--;
                    this.updateForm();
                }
            },

            deleteInputs: function () {
                if (this.maxPeople == 0) {
                    $('.add').remove();
                    this.additionalPeople = 0;
                }
                else if (this.additionalPeople >= this.maxPeople) {
                    $('.add:gt(' + (this.maxPeople - 1) + ')').remove();
                    this.additionalPeople = this.maxPeople;
                }
            },

            refreshButton: function () {
                if (this.additionalPeople < this.maxPeople) {
                    this.addPassengerButton.removeClass('disabled');
                }
                else {
                    this.addPassengerButton.addClass('disabled');
                }
            },

            updateValidation: function(){
                this.form.validator('update');
            }
        }
        

        $('input#IsBigTaxi').change(function () {
            if ($(this).is(":checked")) {
                Taxi.switchToBigTaxi();
                return;
            }
            Taxi.switchToSmallTaxi();
        });


        $('input#addPass').change(function () {

            if ($(this).is(":checked")) {
                Taxi.enablePassengers();
                return;
            }

            Taxi.disablePassengers();
        });

        var dodajOsobe = function () {
            if (!Taxi.addPassengerButton.is('.disabled')) {
                Taxi.addPassenger();
                $('#dodatkoweOsoby')
                    .append('<div class="form-group add">'+
                                '<div class="input-group">' +
                                    '<input type="email" class="form-control" name="adds" pattern=".*pl\.sii\.eu" data-pattern-error="Dopuszczalny tylko E-mail Sii!" placeholder="E-mail" required>'+
                                    '<span class="glyphicon form-control-feedback" aria-hidden="true"></span>' +
                                    '<span class="input-group-addon btn btn-danger deleteDiv">Usuń</span>' +
                                '</div>' +
                                '<div class="help-block with-errors"></div>'+
                            '</div>')

                $(".deleteDiv")
                    .unbind()
                    .on("click",
                        function () {
                            $(this).parent().parent().remove();
                            Taxi.deletePassenger();
                        });
            }
            Taxi.updateForm();
        };
    </script>
}